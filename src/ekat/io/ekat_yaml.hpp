#ifndef EKAT_YAML_HPP
#define EKAT_YAML_HPP

#include "ekat/ekat_parameter_list.hpp"
#include <string>

namespace ekat {

/*
 * These routines allow to parse a YAML file into a ParameterList, and viceversa.
 *
 * The parser functions can only parse bool, int, double, std::string values,
 * as well as arrays (a Sequence, in YAML lingo) of these types. In particular,
 * the parser will try to interpret the input string to bool, int, and double (in this
 * order), and if all casts fail, it will store it as a string. The input will be
 * interpreted as a bool only if it is "true" or "false" (case insensitive).
 * For Sequence inputs, the type of each entry must be the same; if not, an
 * exception will be thrown. Sequence of inputs will be stored as std::vector of
 * the corresponding type. Sequence of bool are an exception, since std::vector<bool>
 * is a peculiar specialization, very bug prone. In this case, we instead store
 * std::vector<char>, with entries being 1 or 0.
 *
 * The write function can only handle types that could have been generated by the
 * parser functions: bool, int, double, std::string, std::vector<char>, std::vector<int>,
 * std::vector<double>, std::vector<std::string>. If any other type is found,
 * an exception will be thrown.
 */

ParameterList parse_yaml_file (const std::string& fname);
void parse_yaml_file (const std::string& fname, ParameterList& params);

void write_yaml_file (const std::string& fname, const ParameterList& params);

} // namespace ekat

#endif // EKAT_YAML_HPP
